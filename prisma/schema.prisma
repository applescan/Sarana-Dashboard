generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())
  name      String
  products  Product[]
  updatedAt DateTime @updatedAt
}

model ItemsRestocked {
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  updatedAt DateTime @updatedAt
}

model ItemsSold {
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  updatedAt DateTime @updatedAt
}

model Order {
  createdAt    DateTime @default(now())
  id           Int      @id @default(autoincrement())
  orderItems   OrderItem[]
  status       String   @default("PENDING")
  totalAmount  Float
  updatedAt    DateTime @updatedAt
}

model OrderItem {
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  price     Float
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  updatedAt DateTime @updatedAt
}

model Product {
  buyPrice       Float
  category       Category        @relation(fields: [categoryId], references: [id])
  categoryId     Int
  createdAt      DateTime        @default(now())
  description    String?
  id             String          @id @default(uuid())
  itemsRestocked ItemsRestocked[]
  itemsSold      ItemsSold[]
  name           String
  orderItems     OrderItem[]
  sellPrice      Float
  stock          Int
  updatedAt      DateTime        @updatedAt
}

model Revenue {
  amount    Float
  createdAt DateTime @default(now())
  date      DateTime @default(now())
  id        Int      @id @default(autoincrement())
  updatedAt DateTime @updatedAt
}
